# Ruby CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-ruby/ for more details
#
version: 2
jobs:
  build:
    docker:
      # specify the version you desire here
      - image: circleci/ruby:2.5-node-browsers
        environment:
          CI: true
      - image: circleci/postgres:latest
        environment:
          POSTGRES_USER: circleci

    working_directory: ~/repo

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "Gemfile.lock" }}-{{ checksum "yarn.lock" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-

      - run:
          name: Install Dependencies
          command: |
            bundle install --jobs=4 --retry=3 --path vendor/bundle

      # Project setup
      - run:
          name: Setup Project to Run
          command: |
            bundle exec bin/setup

      - save_cache:
          paths:
            - ./vendor/bundle
            - ./node_modules
            - ./elm-stuff
          key: v1-dependencies-{{ checksum "Gemfile.lock" }}-{{ checksum "yarn.lock" }}
        

      # run tests!
      - run:
          name: Run Tests
          command: |
            mkdir /tmp/test-results
            TEST_FILES="$(circleci tests glob 'spec/**/*_spec.rb' | circleci tests split --split-by=timings)"
            bundle exec rspec --format progress \
                              --format RspecJunitFormatter \
                              --out /tmp/test-results/rspec.xml \
                              --format progress \
              $(sed -e 's/\n/\\n/' -e 's/ /\ /' <<< "${TEST_FILES}")

      - run:
          name: Run Rubocop
          command: bundle exec rubocop -P

      - run:
          name: Checking and Fixing Vulnerable Gems
          command: bin/vulnerability-autofix

      # collect reports
      - store_test_results:
          path: /tmp/test-results
      - store_artifacts:
          path: /tmp/test-results
          destination: test-results
      - store_artifacts:
          path: tmp/capybara
          destination: capybara-screenshots
